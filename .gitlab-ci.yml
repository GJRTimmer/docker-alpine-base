stages:
  - build
  - triggers
  
docker:latest:
  stage: build
  only: 
    - master
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build --pull --force-rm=true --squash 
        --build-arg VCS_REF=`git rev-parse --short HEAD` 
        --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` 
        --tag=${CI_REGISTRY}/${CI_PROJECT_PATH} .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}

docker:release:
  stage: build
  only:
    - tags
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build --pull --force-rm=true --squash
        --build-arg VCS_REF=`git rev-parse --short HEAD` 
        --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` 
        --tag=${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME} .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}

alpine-redis:
  stage: triggers
  except:
    - tags
  before_script:
    - apk add --update --no-cache curl
  script:
    - curl -s -X POST -F token=${REDIS_TOKEN} -F ref=master https://gitlab.timmertech.nl/api/v4/projects/2/trigger/pipeline > /dev/null

#alpine-glibc:
#  stage: triggers
#  except:
#    - tags
#  before_script:
#    - apk add --update --no-cache curl
#  script:
#    - curl -X POST -F token=$CI_BUILD_TOKEN -F ref=master https://gitlab.timmertech.nl/api/v3/projects/18/trigger/builds > /dev/null
#    
#alpine-postgres:
#  stage: triggers
#  except:
#    - tags
#  before_script:
#    - apk add --update --no-cache curl
#  script:
#    - curl -s -X POST -F token=$CI_BUILD_TOKEN -F ref=master https://gitlab.timmertech.nl/api/v3/projects/6/trigger/builds > /dev/null
#