stages:
  - build
  - deploy
  - triggers
  - clean
  
build:
  stage: build
  tags: 
    - shell
  script:
    - docker build --pull --force-rm=true --tag=$(cat REPOSITORY)/${CI_PROJECT_PATH} .

deploy:
  stage: deploy
  tags:
    - shell
  script:
    - docker push $(cat REPOSITORY)/${CI_PROJECT_PATH}

release:
  stage: deploy
  tags:
    - shell
  only:
    - tags
  script:
    - docker tag $(cat REPOSITORY)/${CI_PROJECT_PATH} $(cat REPOSITORY)/${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}
    - docker push $(cat REPOSITORY)/${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}
    
clean:
  stage: clean
  tags:
    - shell
  script:
    - if [ ! -z $(docker images -q $(cat REPOSITORY)/${CI_PROJECT_PATH}) ]; then docker rmi $(cat REPOSITORY)/${CI_PROJECT_PATH}; fi

clean-release:
  stage: clean
  tags:
    - shell
  only:
    - tags
  script:
    - if [ ! -z $(docker images -q $(cat REPOSITORY)/${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}) ]; then docker rmi $(cat REPOSITORY)/${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}; fi
    
alpine-redis:
  stage: triggers
  tags:
    - shell
  except:
    - tags
  script:
    - curl -s -X POST -F token=bbd2dcdb2bcac6cda10e83d340be2f -F ref=master https://gitlab.timmertech.nl/api/v3/projects/4/trigger/builds > /dev/null

alpine-postgres:
  stage: triggers
  tags:
    - shell
  except:
    - tags
  script:
    - curl -s -X POST -F token=057a8c4eefbdc9b9a9d146a5794169 -F ref=master https://gitlab.timmertech.nl/api/v3/projects/6/trigger/builds > /dev/null
