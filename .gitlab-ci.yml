image: registry.timmertech.nl/docker/docker:latest

stages:
  - build
  - triggers

.docker-login: &docker-login
  before_script:
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}

.docker-build: &docker-build
  script:
    - docker build --pull --force-rm=true --squash 
        --build-arg VCS_REF=`git rev-parse --short HEAD` 
        --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` 
        --tag=${DOCKER_IMAGE} .

.docker-push: &docker-push
  after_script:
    - docker push ${DOCKER_IMAGE}

docker:latest:
  stage: build
  only: 
    - master
  variables:
    DOCKER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  <<: *docker-login
  <<: *docker-build
  <<: *docker-push

docker:branches:
  stage: build
  only:
    - branches
  except:
    - master
    - tags
  variables:
    DOCKER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}
  <<: *docker-login
  <<: *docker-build

alpine-glibc:
  stage: triggers
  only:
    - master
  script:
    - curl -s -X POST -F token=${GLIBC_TOKEN} -F ref=master https://gitlab.timmertech.nl/api/v4/projects/3/trigger/pipeline > /dev/null

redis:
  stage: triggers
  only:
    - master
  script:
    - curl -s -X POST -F token=${REDIS_TOKEN} -F ref=master https://gitlab.timmertech.nl/api/v4/projects/2/trigger/pipeline > /dev/null

postgresql:
  stage: triggers
  only:
    - master
  script:
    - curl -s -X POST -F token=${POSTGRESQL_TOKEN} -F ref=master https://gitlab.timmertech.nl/api/v4/projects/4/trigger/pipeline > /dev/null
    
gitlab-cleaner:
  stage: triggers
  only:
    - master
  script:
    - curl -s -X POST -F token=${GITLAB_CLEANER_TOKEN} -F ref=master https://gitlab.timmertech.nl/api/v4/projects/7/trigger/pipeline > /dev/null

dockerhub:latest:
  stage: triggers
  only:
    - master
  script:
    - curl -s -H 'Content-Type:application/json' --data '{"build":true}' -X POST https://registry.hub.docker.com/u/datacore/alpine-base/trigger/${DOCKERHUB_TOKEN}/ > /dev/null
